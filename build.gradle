plugins {
	id 'java'
	id "io.github.liplum.mgpp" version "1.3.2"
}


group 'BetterJS'
version '1.0'

allprojects {
	ext {
		mindustryVersion = 'v146'
		MdtDataDir = "E:/Users/ASUS/Desktop/Mindustry136"
		uncVersion = "1.8.9"
		VERSION = "1.2.4"
		minApi = 26
	}
	tasks.withType(JavaCompile) {
		targetCompatibility = 9
		sourceCompatibility = 9
	}
	repositories {
		mavenCentral()
		maven { url "https://raw.githubusercontent.com/Zelaux/MindustryRepo/master/repository" }
		maven { url 'https://www.jitpack.io' }
	}
}
configurations.configureEach {
	resolutionStrategy.eachDependency { details ->
		if (details.requested.group == 'com.github.Anuken.Arc') {
			details.useVersion "$mindustryVersion"
		}
	}
}

import arc.files.Fi

task copyJarToGame {
	dependsOn project(":main").getTasksByName("jar", true)
	doLast {
		def modFi = project.archivesBaseName + ".jar"
		new Fi(project(":main").buildDir).child("libs").child(modFi).copyTo(new Fi(MdtDataDir).child("mods")
//				.child("test")
				.child(project.archivesBaseName + "-1.2.4.jar"))
	}
}

task playGame(dependsOn: classes, type: JavaExec) {
	dependsOn copyJarToGame
	//运行游戏目录
	def gameFile = new File(MdtDataDir + "/Mindustry.jar")
	jvmArgs = ["-jar"]
	classpath(gameFile)
	args = [
			gameFile.path
//			,"-debug"
	]
}

task playAndroid {
	def adb = "F:/files/java/sdk/platform-tools/adb"

	def mainProject = project(":main")
	dependsOn mainProject.getTasksByName("deploy", true)
	def MDT_ANDROID_DIR = "/storage/emulated/0/Android/data/io.anuke.mindustry/files";
	doLast {
		("$adb -a push ${mainProject.buildDir}/tmp/deploy/${project.archivesBaseName}-${VERSION}.jar"
				+ " $MDT_ANDROID_DIR/mods/")
				.execute().waitForProcessOutput(System.out, System.err)

		"$adb push ${project.rootDir}/appendLog.sh ${MDT_ANDROID_DIR}/appendLog.sh"
				.execute().waitForProcessOutput(System.out, System.err)
		"$adb shell am start -n io.anuke.mindustry/mindustry.android.AndroidLauncher"
				.execute().waitForProcessOutput(System.out, System.err)
		Thread.sleep(1000)
		"$adb shell sh ${MDT_ANDROID_DIR}/appendLog.sh"
				.execute().waitForProcessOutput(System.out, System.err)
	}
}
